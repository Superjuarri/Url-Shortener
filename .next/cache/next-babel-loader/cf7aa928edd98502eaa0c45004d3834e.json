{"ast":null,"code":"var _jsxFileName = \"/home/superjuarri/apps/url-shortener/components/UrlList/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport { UrlsContext } from '../../contexts/UrlsContext';\nimport UrlListItem from './UrlListItem';\nimport { Wrapper } from './styles';\n\nconst LinksList = () => {\n  const {\n    links,\n    linksDispatch\n  } = useContext(UrlsContext);\n  useEffect(() => {\n    const data = localStorage.getItem('urls');\n\n    if (typeof data == Array) {\n      linksDispatch({\n        type: 'SET_LINKS',\n        urls: data\n      });\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('urls', JSON.stringify(links));\n  });\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, links.length !== 0 ? links.map(link => __jsx(UrlListItem, {\n    key: link.hashid,\n    link: link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }\n  })) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"No urls here!\"));\n};\n\nexport default LinksList;","map":{"version":3,"sources":["/home/superjuarri/apps/url-shortener/components/UrlList/index.js"],"names":["React","useEffect","useContext","UrlsContext","UrlListItem","Wrapper","LinksList","links","linksDispatch","data","localStorage","getItem","Array","type","urls","setItem","JSON","stringify","length","map","link","hashid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,UAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA2BN,UAAU,CAACC,WAAD,CAA3C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AACA,QAAI,OAAOF,IAAP,IAAeG,KAAnB,EAA0B;AACxBJ,MAAAA,aAAa,CAAC;AAAEK,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,IAAI,EAAEL;AAA3B,OAAD,CAAb;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACK,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeV,KAAf,CAA7B;AACD,GAFQ,CAAT;AAIA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACW,MAAN,KAAiB,CAAjB,GACCX,KAAK,CAACY,GAAN,CAAUC,IAAI,IAAI,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,MAAvB;AAA+B,IAAA,IAAI,EAAED,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,CADF;AASD,CAvBD;;AAyBA,eAAed,SAAf","sourcesContent":["import React, { useEffect, useContext } from 'react'\n\nimport { UrlsContext } from '../../contexts/UrlsContext'\n\nimport UrlListItem from './UrlListItem'\nimport { Wrapper } from './styles'\n\nconst LinksList = () => {\n  const { links, linksDispatch } = useContext(UrlsContext)\n\n  useEffect(() => {\n    const data = localStorage.getItem('urls')\n    if (typeof data == Array) {\n      linksDispatch({ type: 'SET_LINKS', urls: data })\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('urls', JSON.stringify(links))\n  })\n\n  return (\n    <Wrapper>\n      {links.length !== 0 ? (\n        links.map(link => <UrlListItem key={link.hashid} link={link} />)\n      ) : (\n        <p>No urls here!</p>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default LinksList\n"]},"metadata":{},"sourceType":"module"}