{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/superjuarri/apps/url-shortener/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport UrlsContextProvider, { UrlsContext } from '../contexts/UrlsContext';\nimport UrlsList from '../components/UrlsList';\nimport fetchUrlData from '../lib/fetchUrlData';\n\nvar IndexPage = function IndexPage() {\n  var _useContext = useContext(UrlsContext),\n      links = _useContext.links,\n      linksDispatch = _useContext.linksDispatch;\n\n  var _useState = useState(''),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var handleClick = function handleClick(url) {\n    var urlData;\n    return _regeneratorRuntime.async(function handleClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetchUrlData(url));\n\n          case 2:\n            urlData = _context.sent;\n\n            if (!(urlData.url == 'Enter a valid URL.' || urlData.url == 'This field may not be blank.')) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 5:\n            linksDispatch({\n              type: 'ADD_LINK',\n              url: urlData\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Index Page\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Url\",\n    value: url,\n    onChange: function onChange(e) {\n      return setUrl(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return handleClick(url);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Click me!\"), __jsx(UrlsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/home/superjuarri/apps/url-shortener/pages/index.js"],"names":["React","useState","useEffect","useContext","UrlsContextProvider","UrlsContext","UrlsList","fetchUrlData","IndexPage","links","linksDispatch","url","setUrl","handleClick","urlData","type","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,mBAAP,IAA8BC,WAA9B,QAAiD,yBAAjD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,oBACWL,UAAU,CAACE,WAAD,CADrB;AAAA,MACdI,KADc,eACdA,KADc;AAAA,MACPC,aADO,eACPA,aADO;;AAAA,kBAEAT,QAAQ,CAAC,EAAD,CAFR;AAAA,MAEfU,GAFe;AAAA,MAEVC,MAFU;;AAItB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAMF,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIJ,YAAY,CAACI,GAAD,CADhB;;AAAA;AACZG,YAAAA,OADY;;AAAA,kBAGhBA,OAAO,CAACH,GAAR,IAAe,oBAAf,IACAG,OAAO,CAACH,GAAR,IAAe,8BAJC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAQlBD,YAAAA,aAAa,CAAC;AAAEK,cAAAA,IAAI,EAAE,UAAR;AAAoBJ,cAAAA,GAAG,EAAEG;AAAzB,aAAD,CAAb;;AARkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,KAFd;AAGE,IAAA,KAAK,EAAEH,GAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAK,CAAC;AAAA,aAAIJ,MAAM,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAML,WAAW,CAACF,GAAD,CAAjB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,EASE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CA5BD;;AA8BA,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\n\nimport UrlsContextProvider, { UrlsContext } from '../contexts/UrlsContext'\nimport UrlsList from '../components/UrlsList'\n\nimport fetchUrlData from '../lib/fetchUrlData'\n\nconst IndexPage = () => {\n  const { links, linksDispatch } = useContext(UrlsContext)\n  const [url, setUrl] = useState('')\n\n  const handleClick = async url => {\n    const urlData = await fetchUrlData(url)\n    if (\n      urlData.url == 'Enter a valid URL.' ||\n      urlData.url == 'This field may not be blank.'\n    ) {\n      return\n    }\n    linksDispatch({ type: 'ADD_LINK', url: urlData })\n  }\n\n  return (\n    <div>\n      <h1>Index Page</h1>\n      <input\n        type='text'\n        placeholder='Url'\n        value={url}\n        onChange={e => setUrl(e.target.value)}\n      />\n      <button onClick={() => handleClick(url)}>Click me!</button>\n      <UrlsList />\n    </div>\n  )\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}