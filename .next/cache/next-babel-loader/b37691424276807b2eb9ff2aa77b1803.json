{"ast":null,"code":"const Pageres = require('pageres');\n\nconst fetchUrlData = async url => {\n  const urlData = await fetch('https://rel.ink/api/links/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      url: url\n    })\n  }).then(res => res.json()).catch(err => err);\n  const screenshot = await new Pageres({\n    delay: 2\n  }).src('https://github.com/sindresorhus/pageres', ['1024x768'], {\n    crop: false\n  }).run();\n  return {\n    urlData,\n    screenshot\n  };\n};\n\nexport default {\n  fetchUrlData\n};","map":{"version":3,"sources":["/home/superjuarri/apps/url-shortener/lib/fetchUrlData.js"],"names":["Pageres","require","fetchUrlData","url","urlData","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","screenshot","delay","src","crop","run"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,YAAY,GAAG,MAAMC,GAAN,IAAa;AAChC,QAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,4BAAD,EAA+B;AACxDC,IAAAA,MAAM,EAAE,MADgD;AAExDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF+C;AAKxDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,GAAG,EAAEA;AADc,KAAf;AALkD,GAA/B,CAAL,CASnBQ,IATmB,CASdC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATO,EAUnBC,KAVmB,CAUbC,GAAG,IAAIA,GAVM,CAAtB;AAYA,QAAMC,UAAU,GAAG,MAAM,IAAIhB,OAAJ,CAAY;AAAEiB,IAAAA,KAAK,EAAE;AAAT,GAAZ,EACtBC,GADsB,CAClB,yCADkB,EACyB,CAAC,UAAD,CADzB,EACuC;AAC5DC,IAAAA,IAAI,EAAE;AADsD,GADvC,EAKtBC,GALsB,EAAzB;AAOA,SAAO;AAAEhB,IAAAA,OAAF;AAAWY,IAAAA;AAAX,GAAP;AACD,CArBD;;AAuBA,eAAe;AAAEd,EAAAA;AAAF,CAAf","sourcesContent":["const Pageres = require('pageres')\n\nconst fetchUrlData = async url => {\n  const urlData = await fetch('https://rel.ink/api/links/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      url: url\n    })\n  })\n    .then(res => res.json())\n    .catch(err => err)\n\n  const screenshot = await new Pageres({ delay: 2 })\n    .src('https://github.com/sindresorhus/pageres', ['1024x768'], {\n      crop: false\n    })\n\n    .run()\n\n  return { urlData, screenshot }\n}\n\nexport default { fetchUrlData }\n"]},"metadata":{},"sourceType":"module"}