{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/home/superjuarri/apps/url-shortener/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport UrlsContextProvider, { UrlsContext } from '../contexts/UrlsContext';\nimport UrlsList from '../components/UrlsList';\n\nvar IndexPage = function IndexPage() {\n  var _useContext = useContext(UrlsContext),\n      links = _useContext.links,\n      linksDispatch = _useContext.linksDispatch;\n\n  var _useState = useState(''),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var fetchUrlData = function fetchUrlData(url) {\n    var urlData;\n    return _regeneratorRuntime.async(function fetchUrlData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://rel.ink/api/links/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: _JSON$stringify({\n                url: url\n              })\n            }).then(function (res) {\n              return res.json();\n            })[\"catch\"](function (err) {\n              return err;\n            }));\n\n          case 2:\n            urlData = _context.sent;\n            console.log(urlData);\n            return _context.abrupt(\"return\", urlData);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var handleClick = function handleClick(url) {\n    var urlData;\n    return _regeneratorRuntime.async(function handleClick$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetchUrlData(url));\n\n          case 2:\n            urlData = _context2.sent;\n\n            if (!(urlData.url == 'Enter a valid URL.' || urlData.url == 'This field may not be blank.')) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            linksDispatch({\n              type: 'ADD_LINK',\n              url: urlData\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Index Page\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Url Title\",\n    value: url,\n    onChange: function onChange(e) {\n      return setUrl(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return handleClick(url);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Click me!\"), __jsx(UrlsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/home/superjuarri/apps/url-shortener/pages/index.js"],"names":["React","useState","useEffect","useContext","UrlsContextProvider","UrlsContext","UrlsList","IndexPage","links","linksDispatch","url","setUrl","fetchUrlData","fetch","method","headers","body","then","res","json","err","urlData","console","log","handleClick","type","e","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,mBAAP,IAA8BC,WAA9B,QAAiD,yBAAjD;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,oBACWJ,UAAU,CAACE,WAAD,CADrB;AAAA,MACdG,KADc,eACdA,KADc;AAAA,MACPC,aADO,eACPA,aADO;;AAAA,kBAEAR,QAAQ,CAAC,EAAD,CAFR;AAAA,MAEfS,GAFe;AAAA,MAEVC,MAFU;;AAItB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAMF,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGG,KAAK,CAAC,4BAAD,EAA+B;AACxDC,cAAAA,MAAM,EAAE,MADgD;AAExDC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAF+C;AAKxDC,cAAAA,IAAI,EAAE,gBAAe;AACnBN,gBAAAA,GAAG,EAAEA;AADc,eAAf;AALkD,aAA/B,CAAL,CASnBO,IATmB,CASd,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aATW,WAUb,UAAAC,GAAG;AAAA,qBAAIA,GAAJ;AAAA,aAVU,CADH;;AAAA;AACbC,YAAAA,OADa;AAanBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAbmB,6CAeZA,OAfY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAkBA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAAMd,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIE,YAAY,CAACF,GAAD,CADhB;;AAAA;AACZW,YAAAA,OADY;;AAAA,kBAGhBA,OAAO,CAACX,GAAR,IAAe,oBAAf,IACAW,OAAO,CAACX,GAAR,IAAe,8BAJC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAQlBD,YAAAA,aAAa,CAAC;AAAEgB,cAAAA,IAAI,EAAE,UAAR;AAAoBf,cAAAA,GAAG,EAAEW;AAAzB,aAAD,CAAb;;AARkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,KAAK,EAAEX,GAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAgB,CAAC;AAAA,aAAIf,MAAM,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMJ,WAAW,CAACd,GAAD,CAAjB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,EASE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CA9CD;;AAgDA,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\n\nimport UrlsContextProvider, { UrlsContext } from '../contexts/UrlsContext'\nimport UrlsList from '../components/UrlsList'\n\nconst IndexPage = () => {\n  const { links, linksDispatch } = useContext(UrlsContext)\n  const [url, setUrl] = useState('')\n\n  const fetchUrlData = async url => {\n    const urlData = await fetch('https://rel.ink/api/links/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url: url\n      })\n    })\n      .then(res => res.json())\n      .catch(err => err)\n\n    console.log(urlData)\n\n    return urlData\n  }\n\n  const handleClick = async url => {\n    const urlData = await fetchUrlData(url)\n    if (\n      urlData.url == 'Enter a valid URL.' ||\n      urlData.url == 'This field may not be blank.'\n    ) {\n      return\n    }\n    linksDispatch({ type: 'ADD_LINK', url: urlData })\n  }\n\n  return (\n    <div>\n      <h1>Index Page</h1>\n      <input\n        type='text'\n        placeholder='Url Title'\n        value={url}\n        onChange={e => setUrl(e.target.value)}\n      />\n      <button onClick={() => handleClick(url)}>Click me!</button>\n      <UrlsList />\n    </div>\n  )\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}