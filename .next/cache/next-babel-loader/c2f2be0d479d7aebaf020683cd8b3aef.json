{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n\nvar fetchShortenedUrl = function fetchShortenedUrl(url) {\n  var fetchData;\n  return _regeneratorRuntime.async(function fetchShortenedUrl$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://rel.ink/api/links/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: _JSON$stringify({\n              url: url\n            }) // body data type must match \"Content-Type\" header\n\n          }).then(function (data) {\n            return JSON.parse(data);\n          }));\n\n        case 2:\n          fetchData = _context.sent;\n          console.log(fetchData);\n          return _context.abrupt(\"return\", fetchData);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport var urlsReducer = function urlsReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_LINK':\n      return [].concat(_toConsumableArray(state), [fetchShortenedUrl(action.link.url)]);\n\n    case 'DELETE_LINK':\n      return state.filter(function (link) {\n        return link.id !== action.id;\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/superjuarri/apps/url-shortener/reducers/UrlsReducer.js"],"names":["fetchShortenedUrl","url","fetch","method","headers","body","then","data","JSON","parse","fetchData","console","log","urlsReducer","state","action","type","link","filter","id"],"mappings":";;;;AAAA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACAC,KAAK,CAAC,4BAAD,EAA+B;AAC1DC,YAAAA,MAAM,EAAE,MADkD;AAE1DC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFiD;AAK1DC,YAAAA,IAAI,EAAE,gBAAe;AAAEJ,cAAAA,GAAG,EAAEA;AAAP,aAAf,CALoD,CAKvB;;AALuB,WAA/B,CAAL,CAMrBK,IANqB,CAMhB,UAAAC,IAAI;AAAA,mBAAIC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAJ;AAAA,WANY,CADA;;AAAA;AAClBG,UAAAA,SADkB;AASxBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AATwB,2CAWjBA,SAXiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAcA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,0CAAWF,KAAX,IAAkBd,iBAAiB,CAACe,MAAM,CAACE,IAAP,CAAYhB,GAAb,CAAnC;;AACF,SAAK,aAAL;AACE,aAAOa,KAAK,CAACI,MAAN,CAAa,UAAAD,IAAI;AAAA,eAAIA,IAAI,CAACE,EAAL,KAAYJ,MAAM,CAACI,EAAvB;AAAA,OAAjB,CAAP;;AACF;AACE,aAAOL,KAAP;AANJ;AAQD,CATM","sourcesContent":["const fetchShortenedUrl = async url => {\n  const fetchData = await fetch('https://rel.ink/api/links/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ url: url }) // body data type must match \"Content-Type\" header\n  }).then(data => JSON.parse(data))\n\n  console.log(fetchData)\n\n  return fetchData\n}\n\nexport const urlsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_LINK':\n      return [...state, fetchShortenedUrl(action.link.url)]\n    case 'DELETE_LINK':\n      return state.filter(link => link.id !== action.id)\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}