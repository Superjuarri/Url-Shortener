{"ast":null,"code":"var _jsxFileName = \"/home/superjuarri/apps/url-shortener/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport UrlsContextProvider, { UrlsContext } from '../contexts/UrlsContext';\nimport UrlsList from '../components/UrlsList';\n\nconst IndexPage = () => {\n  const {\n    links,\n    linksDispatch\n  } = useContext(UrlsContext);\n  const {\n    0: url,\n    1: setUrl\n  } = useState('');\n  useEffect(() => {\n    console.log(links);\n  }, [links]);\n\n  const fetchUrlData = async url => {\n    const urlData = await fetch('https://rel.ink/api/links/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url: url\n      })\n    }).then(res => res.json()).catch(err => err);\n    console.log(urlData);\n    return urlData;\n  };\n\n  const handleClick = async url => {\n    const urlData = await fetchUrlData(url);\n\n    if (urlData.url == 'Enter a valid URL.' || urlData.url == 'This field may not be blank.') {\n      return;\n    }\n\n    linksDispatch({\n      type: 'ADD_LINK',\n      url: urlData\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Index Page\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Url Title\",\n    value: url,\n    onChange: e => setUrl(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: () => handleClick(url),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Click me!\"), __jsx(UrlsList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/home/superjuarri/apps/url-shortener/pages/index.js"],"names":["React","useState","useEffect","useContext","UrlsContextProvider","UrlsContext","UrlsList","IndexPage","links","linksDispatch","url","setUrl","console","log","fetchUrlData","urlData","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","handleClick","type","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,mBAAP,IAA8BC,WAA9B,QAAiD,yBAAjD;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA2BN,UAAU,CAACE,WAAD,CAA3C;AAEA,QAAM;AAAA,OAACK,GAAD;AAAA,OAAMC;AAAN,MAAgBV,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMM,YAAY,GAAG,MAAMJ,GAAN,IAAa;AAChC,UAAMK,OAAO,GAAG,MAAMC,KAAK,CAAC,4BAAD,EAA+B;AACxDC,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF+C;AAKxDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBX,QAAAA,GAAG,EAAEA;AADc,OAAf;AALkD,KAA/B,CAAL,CASnBY,IATmB,CASdC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATO,EAUnBC,KAVmB,CAUbC,GAAG,IAAIA,GAVM,CAAtB;AAYAd,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AAEA,WAAOA,OAAP;AACD,GAhBD;;AAkBA,QAAMY,WAAW,GAAG,MAAMjB,GAAN,IAAa;AAC/B,UAAMK,OAAO,GAAG,MAAMD,YAAY,CAACJ,GAAD,CAAlC;;AACA,QACEK,OAAO,CAACL,GAAR,IAAe,oBAAf,IACAK,OAAO,CAACL,GAAR,IAAe,8BAFjB,EAGE;AACA;AACD;;AACDD,IAAAA,aAAa,CAAC;AAAEmB,MAAAA,IAAI,EAAE,UAAR;AAAoBlB,MAAAA,GAAG,EAAEK;AAAzB,KAAD,CAAb;AACD,GATD;;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,KAAK,EAAEL,GAHT;AAIE,IAAA,QAAQ,EAAEmB,CAAC,IAAIlB,MAAM,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AAAQ,IAAA,OAAO,EAAE,MAAMJ,WAAW,CAACjB,GAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,EASE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CAnDD;;AAqDA,eAAeH,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\n\nimport UrlsContextProvider, { UrlsContext } from '../contexts/UrlsContext'\nimport UrlsList from '../components/UrlsList'\n\nconst IndexPage = () => {\n  const { links, linksDispatch } = useContext(UrlsContext)\n\n  const [url, setUrl] = useState('')\n\n  useEffect(() => {\n    console.log(links)\n  }, [links])\n\n  const fetchUrlData = async url => {\n    const urlData = await fetch('https://rel.ink/api/links/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url: url\n      })\n    })\n      .then(res => res.json())\n      .catch(err => err)\n\n    console.log(urlData)\n\n    return urlData\n  }\n\n  const handleClick = async url => {\n    const urlData = await fetchUrlData(url)\n    if (\n      urlData.url == 'Enter a valid URL.' ||\n      urlData.url == 'This field may not be blank.'\n    ) {\n      return\n    }\n    linksDispatch({ type: 'ADD_LINK', url: urlData })\n  }\n\n  return (\n    <div>\n      <h1>Index Page</h1>\n      <input\n        type='text'\n        placeholder='Url Title'\n        value={url}\n        onChange={e => setUrl(e.target.value)}\n      />\n      <button onClick={() => handleClick(url)}>Click me!</button>\n      <UrlsList />\n    </div>\n  )\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}